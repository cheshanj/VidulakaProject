package OrderPlanning;

import Home.*;
import javax.swing.JDesktopPane;

import OrderPlanning.yourinitialframe;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import net.proteanit.sql.DbUtils;
import OrderPlanning.Ord_Remaining_Date;
import OrderPlanning.Ord_Procedure;
import java.awt.Color;
import java.awt.event.MouseListener;
import java.sql.Statement;
import java.util.Calendar;
import java.util.Date;

import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.table.TableColumn;

public class Ord_Request extends javax.swing.JInternalFrame {

    /**
     * Creates new form internal
     */
    long ord_daysdifference;
    Connection con = null;
    ResultSet rs;
    PreparedStatement ps;

    public Ord_Request() {

        initComponents();
        con = dbconnect.connect();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        ord_lbl_pid_name.setVisible(true);
        ord_lbl_pid.setVisible(true);
        ord_lblsid.setVisible(false);
        ord_lbDownArrow.setVisible(false);
        // ord_lblStatus.setVisible(false);
        // ord_lblStatusValue.setVisible(false);
        ord_lblRequestId.setVisible(false);
        ord_lblRequestIdValue.setVisible(false);
        ord_lbl_pid_name.setVisible(false);
        ord_lbl_pid.setVisible(false);
        ord_lblModPidVal.setVisible(false);
        ord_txtStatusValue.setEditable(false);

        //  ord_tbl_Vidulaka.setVisible(true);
        //  ord_btnViewComple.setEnabled(false);
        //  ord_btnViewPend.setEnabled(false);
        //    ord_btnInsert.setEnabled(false);
        ordTableLoad();
        fillRawMatName();
        //fillItemCode(jComboBox1.getSelectedItem().toString());
        jPanel1.setVisible(false);
        ord_VidulakaPanel.setVisible(true);
        ord_checkAvailPanel.setVisible(false);
        ord_ModelPanel.setVisible(false);
        ord_custPanel.setVisible(false);
        // jPanel5.setVisible(false);
        ordReceivedTableLoad();
        ordRawMatTableLoad();
    }

    public void ordRawMatTableLoad() {
        String sql = "select ra.itemCode 'Item Code',ra.itemName 'Item Name',ra.amount 'Amount',ra.criticalAmount 'Critical Amount' from raw_material ra,received_raw_material rrm where rrm.itemCode=ra.itemCode";
        try {

            ps = con.prepareStatement(sql);

            rs = ps.executeQuery();

            ord_tblRawMat.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
        }
    }

    private void fillRawMatName() {
        try {
            String sql = "select * from raw_material";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            while (rs.next()) {
                String n = rs.getString("itemName");
                ord_cmbRawMatName.addItem(n);
            }
        } catch (Exception e) {
        }

    }

    public void ordTableLoad() {

        String sql = "select distinct o.orderID 'Order ID',p.productType 'Product Type',p.productGrade 'Product Grade', o.quantity Quantity, o.orderDate 'Order Date', o.dueDate 'Due Date',o.checkstatus 'Order Status',o.printingStatus 'Printing Status'  from orders o,product p where o.pid=p.productID";
        try {

            ps = con.prepareStatement(sql);

            rs = ps.executeQuery();

            ord_tbl_Vidulaka.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
        }
        //set ord_lblRequestIdValue as next order id
        String sql1 = "select max(orderID)+1 orderID from orders";
        try {
            // Statement stm = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            ps = con.prepareStatement(sql1);
            rs = ps.executeQuery();

            while (rs.next()) {

                ord_lblRequestIdValue.setText(rs.getString("orderID"));

            }

        } catch (Exception e) {

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backPanel = new javax.swing.JPanel();
        leftPanel = new javax.swing.JPanel();
        ord_btnCust = new javax.swing.JButton();
        ord_btn_Model = new javax.swing.JButton();
        ord_btn_Vidulaka = new javax.swing.JButton();
        rightPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ord_VidulakaPanel = new javax.swing.JPanel();
        ord_btnCheckAvail = new javax.swing.JButton();
        ord_lblRequestId = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ord_tbl_Vidulaka = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        ord_tbl_Vidulaka1 = new javax.swing.JTable();
        ord_lbl_viduLak = new javax.swing.JLabel();
        ord_lbl_pid_name = new javax.swing.JLabel();
        ord_lbl_pid = new javax.swing.JLabel();
        ord_lblRemainingDates = new javax.swing.JLabel();
        ord_lblRemainingDate = new javax.swing.JLabel();
        ord_lbl_remaindpng = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        ord_lblProductName = new javax.swing.JLabel();
        ord_lblQuantity = new javax.swing.JLabel();
        ord_lblOrderDate = new javax.swing.JLabel();
        ord_lblDueDate = new javax.swing.JLabel();
        ord_lblAgent = new javax.swing.JLabel();
        ord_btnClear1 = new javax.swing.JButton();
        ord_ComboBox_AgentLname = new javax.swing.JComboBox();
        ord_DateChooser_DueDate = new com.toedter.calendar.JDateChooser();
        ord_DateChooser_OrderDate = new com.toedter.calendar.JDateChooser();
        ord_Spinner_Quantity = new javax.swing.JSpinner();
        ord_ComboBox_Grade = new javax.swing.JComboBox();
        ord_ComboBox_Type = new javax.swing.JComboBox();
        ord_ComboBox_fname = new javax.swing.JComboBox();
        ord_btnInsert = new javax.swing.JButton();
        ord_btnUpdate = new javax.swing.JButton();
        ord_btnDelete = new javax.swing.JButton();
        ord_btnViewComple = new javax.swing.JButton();
        ord_btnViewPend = new javax.swing.JButton();
        ord_btnWhole = new javax.swing.JButton();
        ord_lblStatus = new javax.swing.JLabel();
        ord_lblPty = new javax.swing.JLabel();
        ord_txtType = new javax.swing.JTextField();
        ord_btnSearch = new javax.swing.JButton();
        ord_lblErrorOD = new javax.swing.JLabel();
        ord_lblErrorDD = new javax.swing.JLabel();
        ord_btnClear = new javax.swing.JButton();
        ord_lblRequestIdValue = new javax.swing.JLabel();
        ord_txtStatusValue = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ord_ModelPanel = new javax.swing.JPanel();
        ord_lbModHeading = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        ord_btn_SaledAmount = new javax.swing.JButton();
        ord_lblModelName = new javax.swing.JLabel();
        ord_lblModelNameValue = new javax.swing.JLabel();
        ord_cmbModelGrade = new javax.swing.JComboBox();
        ord_lblModAmt = new javax.swing.JLabel();
        ord_lblModAmtValue = new javax.swing.JLabel();
        ord_lblModRetAmtName = new javax.swing.JLabel();
        ord_lblModRetAmtVal = new javax.swing.JLabel();
        ord_lblModSalAmtName = new javax.swing.JLabel();
        ord_lblModSalAmtValue = new javax.swing.JLabel();
        ord_lblModPidVal = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ord_checkAvailPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        ord_btn_Back = new javax.swing.JButton();
        ord_btnAddToRaw = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        ord_tblRawMat = new javax.swing.JTable();
        ord_ReceivedPanel = new javax.swing.JPanel();
        ord_btnAddChkRawMat = new javax.swing.JButton();
        ord_lblRawName = new javax.swing.JLabel();
        ord_cmbRawMatName = new javax.swing.JComboBox();
        ord_lblItemCode = new javax.swing.JLabel();
        ord_lblUniPri = new javax.swing.JLabel();
        ord_lblTotp = new javax.swing.JLabel();
        ord_txtUniPri = new javax.swing.JTextField();
        ord_txtAmt = new javax.swing.JTextField();
        ord_lblAmt = new javax.swing.JLabel();
        ord_txtTotPri = new javax.swing.JTextField();
        ord_lblReceDate = new javax.swing.JLabel();
        ord_ReceivedDate = new com.toedter.calendar.JDateChooser();
        ord_lblSupN = new javax.swing.JLabel();
        ord_cmbSupName = new javax.swing.JComboBox();
        ord_lblSupPhn = new javax.swing.JLabel();
        ord_txtSupPhn = new javax.swing.JTextField();
        ord_lblsid = new javax.swing.JLabel();
        ord_btn_ChkUpdate = new javax.swing.JButton();
        ord_btnChkDele = new javax.swing.JButton();
        ord_lbDownArrow = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ord_tblReceivedRawMat = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        ord_custPanel = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 51));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setForeground(new java.awt.Color(51, 51, 51));
        setMaximizable(true);
        setEnabled(false);
        setFocusCycleRoot(false);
        setMaximumSize(new java.awt.Dimension(1024, 570));
        setMinimumSize(new java.awt.Dimension(1024, 570));
        setPreferredSize(new java.awt.Dimension(1024, 570));
        setRequestFocusEnabled(false);
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVerifyInputWhenFocusTarget(false);
        setVisible(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backPanel.setMaximumSize(new java.awt.Dimension(1024, 570));
        backPanel.setMinimumSize(new java.awt.Dimension(1024, 570));
        backPanel.setOpaque(false);
        backPanel.setPreferredSize(new java.awt.Dimension(1024, 570));

        leftPanel.setMaximumSize(new java.awt.Dimension(100, 570));
        leftPanel.setMinimumSize(new java.awt.Dimension(100, 570));
        leftPanel.setOpaque(false);
        leftPanel.setPreferredSize(new java.awt.Dimension(100, 570));
        leftPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ord_btnCust.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/customerorders.png"))); // NOI18N
        ord_btnCust.setBorderPainted(false);
        ord_btnCust.setContentAreaFilled(false);
        ord_btnCust.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        ord_btnCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_btnCustActionPerformed(evt);
            }
        });
        leftPanel.add(ord_btnCust, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 100, -1));

        ord_btn_Model.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/modelpapers.png"))); // NOI18N
        ord_btn_Model.setBorderPainted(false);
        ord_btn_Model.setContentAreaFilled(false);
        ord_btn_Model.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        ord_btn_Model.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_btn_ModelActionPerformed(evt);
            }
        });
        leftPanel.add(ord_btn_Model, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 100, -1));

        ord_btn_Vidulaka.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/vidulaka.png"))); // NOI18N
        ord_btn_Vidulaka.setBorderPainted(false);
        ord_btn_Vidulaka.setContentAreaFilled(false);
        ord_btn_Vidulaka.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        ord_btn_Vidulaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_btn_VidulakaActionPerformed(evt);
            }
        });
        leftPanel.add(ord_btn_Vidulaka, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, -1));

        rightPanel.setMaximumSize(new java.awt.Dimension(910, 570));
        rightPanel.setMinimumSize(new java.awt.Dimension(910, 570));
        rightPanel.setOpaque(false);
        rightPanel.setPreferredSize(new java.awt.Dimension(910, 570));
        rightPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setMaximumSize(new java.awt.Dimension(915, 570));
        jPanel1.setMinimumSize(new java.awt.Dimension(915, 570));
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(915, 570));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/blackbackground.jpg"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        rightPanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        ord_VidulakaPanel.setBackground(new java.awt.Color(0, 0, 255));
        ord_VidulakaPanel.setMaximumSize(new java.awt.Dimension(915, 570));
        ord_VidulakaPanel.setMinimumSize(new java.awt.Dimension(915, 570));
        ord_VidulakaPanel.setOpaque(false);
        ord_VidulakaPanel.setPreferredSize(new java.awt.Dimension(915, 570));
        ord_VidulakaPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ord_btnCheckAvail.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ord_btnCheckAvail.setText("Check Availability >>");
        ord_btnCheckAvail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 0)));
        ord_btnCheckAvail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_btnCheckAvailActionPerformed(evt);
            }
        });
        ord_VidulakaPanel.add(ord_btnCheckAvail, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 500, 140, 30));

        ord_lblRequestId.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblRequestId.setForeground(new java.awt.Color(255, 255, 255));
        ord_lblRequestId.setText("Order Id");
        ord_VidulakaPanel.add(ord_lblRequestId, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        ord_tbl_Vidulaka.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Product Type", "Product Grade", "Quantity", "Order Date", "Due Date", "Order Status", "Printing Status"
            }
        ));
        ord_tbl_Vidulaka.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ord_tbl_VidulakaMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ord_tbl_VidulakaMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(ord_tbl_Vidulaka);

        ord_VidulakaPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 870, 100));

        ord_tbl_Vidulaka1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Product Type", "Product Grade", "Quantity", "Order Date", "Due Date", "Order Status", "Printing Status"
            }
        ));
        ord_tbl_Vidulaka1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ord_tbl_Vidulaka1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ord_tbl_Vidulaka1MouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(ord_tbl_Vidulaka1);

        ord_VidulakaPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 870, 100));

        ord_lbl_viduLak.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        ord_lbl_viduLak.setForeground(new java.awt.Color(255, 255, 255));
        ord_lbl_viduLak.setText("Vidulaka/Lakvidu Order Planning");
        ord_VidulakaPanel.add(ord_lbl_viduLak, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, -1, -1));

        ord_lbl_pid_name.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lbl_pid_name.setForeground(new java.awt.Color(255, 255, 255));
        ord_lbl_pid_name.setText("PID");
        ord_VidulakaPanel.add(ord_lbl_pid_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        ord_lbl_pid.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lbl_pid.setForeground(new java.awt.Color(255, 255, 255));
        ord_lbl_pid.setText("fdfdg");
        ord_VidulakaPanel.add(ord_lbl_pid, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, -1, -1));

        ord_lblRemainingDates.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblRemainingDates.setText("Remaining Dates");
        ord_VidulakaPanel.add(ord_lblRemainingDates, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 150, -1, -1));

        ord_lblRemainingDate.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        ord_VidulakaPanel.add(ord_lblRemainingDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 80, 80, 40));

        ord_lbl_remaindpng.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OrderPlanning/images/calender1.png"))); // NOI18N
        ord_VidulakaPanel.add(ord_lbl_remaindpng, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 40, 110, 100));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Manage Orders"));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ord_lblProductName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblProductName.setText("Product Name");
        jPanel2.add(ord_lblProductName, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 100, 40));

        ord_lblQuantity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblQuantity.setText("Quantity");
        jPanel2.add(ord_lblQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, -1, -1));

        ord_lblOrderDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblOrderDate.setText("Order Date");
        jPanel2.add(ord_lblOrderDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, -1, -1));

        ord_lblDueDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblDueDate.setText("Due Date");
        jPanel2.add(ord_lblDueDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, -1, -1));

        ord_lblAgent.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblAgent.setText("Agent Last Name");
        jPanel2.add(ord_lblAgent, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, -1, -1));

        ord_btnClear1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ord_btnClear1.setText("Generate Order Report");
        ord_btnClear1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 0)));
        ord_btnClear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_btnClear1ActionPerformed(evt);
            }
        });
        jPanel2.add(ord_btnClear1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 240, 140, 30));

        ord_ComboBox_AgentLname.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Agent Last Name", "Silva", "Perera", "K" }));
        jPanel2.add(ord_ComboBox_AgentLname, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 150, -1, -1));

        ord_DateChooser_DueDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ord_DateChooser_DueDatePropertyChange(evt);
            }
        });
        jPanel2.add(ord_DateChooser_DueDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 160, -1));

        ord_DateChooser_OrderDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ord_DateChooser_OrderDatePropertyChange(evt);
            }
        });
        ord_DateChooser_OrderDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ord_DateChooser_OrderDateKeyTyped(evt);
            }
        });
        jPanel2.add(ord_DateChooser_OrderDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, 160, -1));

        ord_Spinner_Quantity.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10000, 1));
        ord_Spinner_Quantity.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ord_Spinner_QuantityPropertyChange(evt);
            }
        });
        jPanel2.add(ord_Spinner_Quantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 70, -1));

        ord_ComboBox_Grade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Grade", "1", "2", "3", "4", "5", "6" }));
        jPanel2.add(ord_ComboBox_Grade, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, -1, -1));

        ord_ComboBox_Type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Type", "Vidulaka Sinhala", "Vidulaka Workbook", "Vidulaka English", "Vidulaka Mathematics", "Vidulaka Science", "Vidulaka Paperset", " ", " ", " " }));
        jPanel2.add(ord_ComboBox_Type, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, -1, -1));

        ord_ComboBox_fname.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Agent First Name", "Isuru", "Pathmila", "Sumudu" }));
        jPanel2.add(ord_ComboBox_fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 150, -1, -1));

        ord_btnInsert.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ord_btnInsert.setText("Insert");
        ord_btnInsert.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 0)));
        ord_btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_btnInsertActionPerformed(evt);
            }
        });
        jPanel2.add(ord_btnInsert, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 60, 30));

        ord_btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ord_btnUpdate.setText("Re Order");
        ord_btnUpdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 0)));
        ord_btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_btnUpdateActionPerformed(evt);
            }
        });
        jPanel2.add(ord_btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, 70, 30));

        ord_btnDelete.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ord_btnDelete.setText("Delete");
        ord_btnDelete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 0)));
        ord_btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_btnDeleteActionPerformed(evt);
            }
        });
        jPanel2.add(ord_btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 190, 60, 30));

        ord_btnViewComple.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ord_btnViewComple.setText("View Completed Orders");
        ord_btnViewComple.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 0)));
        ord_btnViewComple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_btnViewCompleActionPerformed(evt);
            }
        });
        jPanel2.add(ord_btnViewComple, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, 140, 30));

        ord_btnViewPend.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ord_btnViewPend.setText("View Pending Orders");
        ord_btnViewPend.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 0)));
        ord_btnViewPend.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ord_btnViewPendMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ord_btnViewPendMouseReleased(evt);
            }
        });
        ord_btnViewPend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_btnViewPendActionPerformed(evt);
            }
        });
        jPanel2.add(ord_btnViewPend, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 190, 120, 30));

        ord_btnWhole.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ord_btnWhole.setText("All Orders");
        ord_btnWhole.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 0)));
        ord_btnWhole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_btnWholeActionPerformed(evt);
            }
        });
        ord_btnWhole.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ord_btnWholeKeyPressed(evt);
            }
        });
        jPanel2.add(ord_btnWhole, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 190, 90, 30));

        ord_lblStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblStatus.setText("Status");
        jPanel2.add(ord_lblStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 140, -1, -1));

        ord_lblPty.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblPty.setText("Product Type");
        jPanel2.add(ord_lblPty, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 240, -1, -1));

        ord_txtType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_txtTypeActionPerformed(evt);
            }
        });
        ord_txtType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ord_txtTypeKeyTyped(evt);
            }
        });
        jPanel2.add(ord_txtType, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 240, 190, -1));

        ord_btnSearch.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ord_btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OrderPlanning/images/search2.png"))); // NOI18N
        ord_btnSearch.setBorder(null);
        ord_btnSearch.setBorderPainted(false);
        ord_btnSearch.setContentAreaFilled(false);
        ord_btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_btnSearchActionPerformed(evt);
            }
        });
        jPanel2.add(ord_btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 240, 30, 20));

        ord_lblErrorOD.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblErrorOD.setForeground(new java.awt.Color(204, 0, 0));
        jPanel2.add(ord_lblErrorOD, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 80, 210, 20));

        ord_lblErrorDD.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblErrorDD.setForeground(new java.awt.Color(204, 0, 0));
        jPanel2.add(ord_lblErrorDD, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 110, 220, 20));

        ord_btnClear.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ord_btnClear.setText("Clear");
        ord_btnClear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 0)));
        ord_btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_btnClearActionPerformed(evt);
            }
        });
        jPanel2.add(ord_btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 190, 80, 30));

        ord_lblRequestIdValue.setText("jLabel6");
        jPanel2.add(ord_lblRequestIdValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        ord_txtStatusValue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ord_txtStatusValue.setForeground(new java.awt.Color(0, 102, 0));
        jPanel2.add(ord_txtStatusValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 140, 170, -1));

        ord_VidulakaPanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 870, 300));

        jLabel3.setFont(new java.awt.Font("Tempus Sans ITC", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/blackbackground.jpg"))); // NOI18N
        ord_VidulakaPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        rightPanel.add(ord_VidulakaPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        ord_ModelPanel.setBackground(new java.awt.Color(255, 255, 255));
        ord_ModelPanel.setMaximumSize(new java.awt.Dimension(915, 570));
        ord_ModelPanel.setMinimumSize(new java.awt.Dimension(915, 570));
        ord_ModelPanel.setOpaque(false);
        ord_ModelPanel.setPreferredSize(new java.awt.Dimension(915, 570));
        ord_ModelPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ord_lbModHeading.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        ord_lbModHeading.setForeground(new java.awt.Color(255, 255, 255));
        ord_lbModHeading.setText("Last Month Model Papers");
        ord_ModelPanel.add(ord_lbModHeading, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, -1, -1));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Last Month Model Papers"));

        ord_btn_SaledAmount.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ord_btn_SaledAmount.setText("Calucalate Saled Amount");
        ord_btn_SaledAmount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 0)));
        ord_btn_SaledAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_btn_SaledAmountActionPerformed(evt);
            }
        });

        ord_lblModelName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblModelName.setText("Model Paper Name");

        ord_lblModelNameValue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ord_lblModelNameValue.setForeground(new java.awt.Color(0, 102, 0));
        ord_lblModelNameValue.setText("Vidulaka Paperset");

        ord_cmbModelGrade.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ord_cmbModelGrade.setForeground(new java.awt.Color(0, 102, 0));
        ord_cmbModelGrade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Grade ", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11" }));

        ord_lblModAmt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblModAmt.setText("Ordered Amount");

        ord_lblModAmtValue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ord_lblModAmtValue.setForeground(new java.awt.Color(0, 102, 0));

        ord_lblModRetAmtName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblModRetAmtName.setText("Return Amount");

        ord_lblModRetAmtVal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ord_lblModRetAmtVal.setForeground(new java.awt.Color(0, 102, 0));

        ord_lblModSalAmtName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblModSalAmtName.setText("Saled Amount");

        ord_lblModSalAmtValue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ord_lblModSalAmtValue.setForeground(new java.awt.Color(0, 102, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(ord_btn_SaledAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ord_lblModAmt)
                            .addComponent(ord_lblModelName)
                            .addComponent(ord_lblModRetAmtName)
                            .addComponent(ord_lblModSalAmtName))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(ord_lblModelNameValue)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                                .addComponent(ord_cmbModelGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ord_lblModSalAmtValue, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ord_lblModAmtValue, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ord_lblModRetAmtVal, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(44, 44, 44))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ord_lblModelName, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ord_lblModelNameValue)
                    .addComponent(ord_cmbModelGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ord_lblModAmtValue, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ord_lblModAmt))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ord_lblModRetAmtName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ord_lblModRetAmtVal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ord_lblModSalAmtName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ord_lblModSalAmtValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(ord_btn_SaledAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        ord_ModelPanel.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, 470, 300));

        ord_lblModPidVal.setForeground(new java.awt.Color(255, 255, 255));
        ord_lblModPidVal.setText("pid");
        ord_ModelPanel.add(ord_lblModPidVal, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, -1, -1));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/blackbackground.jpg"))); // NOI18N
        ord_ModelPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        rightPanel.add(ord_ModelPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        ord_checkAvailPanel.setBackground(new java.awt.Color(204, 204, 204));
        ord_checkAvailPanel.setMaximumSize(new java.awt.Dimension(915, 570));
        ord_checkAvailPanel.setOpaque(false);
        ord_checkAvailPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OrderPlanning/images/back_button.png"))); // NOI18N
        ord_checkAvailPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 410, 130, 110));

        ord_btn_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_btn_BackActionPerformed(evt);
            }
        });
        ord_checkAvailPanel.add(ord_btn_Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 430, 70, 70));

        ord_btnAddToRaw.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ord_btnAddToRaw.setText("Add to Raw Material");
        ord_btnAddToRaw.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 0)));
        ord_btnAddToRaw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_btnAddToRawActionPerformed(evt);
            }
        });
        ord_checkAvailPanel.add(ord_btnAddToRaw, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, 140, 30));

        ord_tblRawMat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(ord_tblRawMat);

        ord_checkAvailPanel.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, -1, 150));

        ord_btnAddChkRawMat.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ord_btnAddChkRawMat.setText("Insert");
        ord_btnAddChkRawMat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 0)));
        ord_btnAddChkRawMat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_btnAddChkRawMatActionPerformed(evt);
            }
        });

        ord_lblRawName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblRawName.setText("Raw Material Name");

        ord_cmbRawMatName.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ord_cmbRawMatNamePropertyChange(evt);
            }
        });

        ord_lblItemCode.setText("Item Code");

        ord_lblUniPri.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblUniPri.setText("Unit Price");

        ord_lblTotp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblTotp.setText("Total Price");

        ord_txtAmt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_txtAmtActionPerformed(evt);
            }
        });

        ord_lblAmt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblAmt.setText("Amount");

        ord_txtTotPri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_txtTotPriActionPerformed(evt);
            }
        });

        ord_lblReceDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblReceDate.setText("Received Date");

        ord_lblSupN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblSupN.setText("Supplier Name");

        ord_cmbSupName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Supplier Name", "Saman" }));
        ord_cmbSupName.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ord_cmbSupNamePropertyChange(evt);
            }
        });

        ord_lblSupPhn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ord_lblSupPhn.setText("Supplier Phone");

        ord_txtSupPhn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_txtSupPhnActionPerformed(evt);
            }
        });

        ord_lblsid.setText("Sid");

        ord_btn_ChkUpdate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ord_btn_ChkUpdate.setText("Update");
        ord_btn_ChkUpdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 0)));
        ord_btn_ChkUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_btn_ChkUpdateActionPerformed(evt);
            }
        });

        ord_btnChkDele.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ord_btnChkDele.setText("Delete");
        ord_btnChkDele.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 0)));
        ord_btnChkDele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_btnChkDeleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ord_ReceivedPanelLayout = new javax.swing.GroupLayout(ord_ReceivedPanel);
        ord_ReceivedPanel.setLayout(ord_ReceivedPanelLayout);
        ord_ReceivedPanelLayout.setHorizontalGroup(
            ord_ReceivedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ord_ReceivedPanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(ord_ReceivedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ord_ReceivedPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(ord_btnAddChkRawMat, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(ord_btn_ChkUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(ord_btnChkDele, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(ord_ReceivedPanelLayout.createSequentialGroup()
                        .addGroup(ord_ReceivedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ord_lblRawName)
                            .addComponent(ord_lblUniPri)
                            .addComponent(ord_lblTotp)
                            .addComponent(ord_lblAmt)
                            .addComponent(ord_lblReceDate)
                            .addComponent(ord_lblSupN)
                            .addComponent(ord_lblSupPhn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addGroup(ord_ReceivedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ord_txtAmt)
                            .addComponent(ord_txtTotPri)
                            .addComponent(ord_txtUniPri)
                            .addComponent(ord_cmbRawMatName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ord_ReceivedDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ord_cmbSupName, 0, 114, Short.MAX_VALUE)
                            .addComponent(ord_txtSupPhn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ord_ReceivedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ord_ReceivedPanelLayout.createSequentialGroup()
                                .addComponent(ord_lblItemCode)
                                .addContainerGap(24, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ord_ReceivedPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(ord_lblsid, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30))))))
        );
        ord_ReceivedPanelLayout.setVerticalGroup(
            ord_ReceivedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ord_ReceivedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ord_ReceivedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ord_lblRawName)
                    .addGroup(ord_ReceivedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ord_lblItemCode)
                        .addComponent(ord_cmbRawMatName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(ord_ReceivedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ord_lblUniPri)
                    .addComponent(ord_txtUniPri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ord_ReceivedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ord_lblTotp)
                    .addComponent(ord_txtTotPri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ord_ReceivedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ord_lblAmt)
                    .addComponent(ord_txtAmt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(ord_ReceivedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ord_ReceivedPanelLayout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(ord_lblsid))
                    .addGroup(ord_ReceivedPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(ord_ReceivedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ord_ReceivedDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ord_lblReceDate))
                        .addGap(17, 17, 17)
                        .addGroup(ord_ReceivedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ord_lblSupN)
                            .addComponent(ord_cmbSupName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(ord_ReceivedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ord_lblSupPhn)
                            .addComponent(ord_txtSupPhn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ord_ReceivedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ord_btn_ChkUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ord_btnAddChkRawMat, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ord_btnChkDele, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 60, Short.MAX_VALUE))
        );

        ord_checkAvailPanel.add(ord_ReceivedPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 20, 370, 350));

        ord_lbDownArrow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OrderPlanning/images/arrow_down.png"))); // NOI18N
        ord_checkAvailPanel.add(ord_lbDownArrow, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, 110, 120));

        ord_tblReceivedRawMat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(ord_tblReceivedRawMat);

        ord_checkAvailPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, 120));

        jLabel6.setFont(new java.awt.Font("Tempus Sans ITC", 0, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/blackbackground.jpg"))); // NOI18N
        ord_checkAvailPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        rightPanel.add(ord_checkAvailPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        ord_custPanel.setBackground(new java.awt.Color(102, 255, 102));
        ord_custPanel.setMaximumSize(new java.awt.Dimension(915, 570));
        ord_custPanel.setMinimumSize(new java.awt.Dimension(915, 570));
        ord_custPanel.setOpaque(false);
        ord_custPanel.setPreferredSize(new java.awt.Dimension(915, 570));
        ord_custPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Customer Order"));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("First Name");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Last Name");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Address Line1 ");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Address Line2 ");

        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Phone number");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Email");

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton7.setText("Insert");
        jButton7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 0)));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton8.setText("Update");
        jButton8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 0)));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton9.setText("Delete");
        jButton9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 0)));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel22))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel17))))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(3, 3, 3)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addGap(27, 27, 27))
        );

        ord_custPanel.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, 390, 290));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Customer Order");
        ord_custPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/blackbackground.jpg"))); // NOI18N
        ord_custPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        rightPanel.add(ord_custPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout backPanelLayout = new javax.swing.GroupLayout(backPanel);
        backPanel.setLayout(backPanelLayout);
        backPanelLayout.setHorizontalGroup(
            backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backPanelLayout.createSequentialGroup()
                .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );
        backPanelLayout.setVerticalGroup(
            backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backPanelLayout.createSequentialGroup()
                .addGroup(backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(backPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/background.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 0, -1, -1));

        setBounds(0, 0, 1024, 570);
    }// </editor-fold>//GEN-END:initComponents

    private void ord_btn_VidulakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_btn_VidulakaActionPerformed
        /*      try {
         // removing panels
         rightPanel.removeAll();
         rightPanel.repaint();
         rightPanel.revalidate();
         //adding panels
         rightPanel.add(ord_VidulakaPanel);
         rightPanel.repaint();
         rightPanel.revalidate();
         } catch (Exception e) {
         }*/
        ord_VidulakaPanel.setVisible(true);
        jPanel1.setVisible(false);
        ord_ModelPanel.setVisible(false);
        ord_checkAvailPanel.setVisible(false);
        ord_custPanel.setVisible(false);
    }//GEN-LAST:event_ord_btn_VidulakaActionPerformed

    private void ord_btn_ModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_btn_ModelActionPerformed
        /*   try {
         // removing panels
         rightPanel.removeAll();
         rightPanel.repaint();
         rightPanel.revalidate();
         //adding panels
         rightPanel.add(ord_ModelPanel);
         rightPanel.repaint();
         rightPanel.revalidate();
         } catch (Exception e) {
         }*/
        ord_VidulakaPanel.setVisible(false);
        jPanel1.setVisible(false);
        ord_ModelPanel.setVisible(true);
        ord_checkAvailPanel.setVisible(false);
        ord_custPanel.setVisible(false);

    }//GEN-LAST:event_ord_btn_ModelActionPerformed

    private void ord_btnCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_btnCustActionPerformed
        /*  try {
         // removing panels
         rightPanel.removeAll();
         rightPanel.repaint();
         rightPanel.revalidate();
         //adding panels
         rightPanel.add(ord_custPanel);
         rightPanel.repaint();
         rightPanel.revalidate();
         } catch (Exception e) {
         }*/
        ord_VidulakaPanel.setVisible(false);
        jPanel1.setVisible(false);
        ord_ModelPanel.setVisible(false);
        ord_checkAvailPanel.setVisible(false);
        ord_custPanel.setVisible(true);
    }//GEN-LAST:event_ord_btnCustActionPerformed

    private void ord_btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_btnInsertActionPerformed
//  ord_btnClear.setEnabled(true);
        boolean chkGrade;
        boolean chkType;
        boolean chkAgent;
        int g = 0;
        String t = ord_ComboBox_Type.getSelectedItem().toString();
        String qu = ord_Spinner_Quantity.getValue().toString();
        String a = ord_ComboBox_AgentLname.getSelectedItem().toString();
        String af = ord_ComboBox_fname.getSelectedItem().toString();
        ord_lblRemainingDate.setVisible(true);
        try {
            //    ord_ComboBox_Grade.setBackground(Color.white);
            g = Integer.parseInt(ord_ComboBox_Grade.getSelectedItem().toString());

            chkGrade = true;

        } catch (NumberFormatException e) {
            // ord_ComboBox_Grade.setBackground(Color.pink);
            chkGrade = false;

            JOptionPane.showMessageDialog(this, "Please select a Grade below there", "Invalid Grade", JOptionPane.ERROR_MESSAGE);
        }
        if (t.equals("Type")) {
            //  ord_ComboBox_Type.setBackground(Color.pink);

            chkType = false;
            JOptionPane.showMessageDialog(this, "Please select a Type below there", "Invalid Type", JOptionPane.ERROR_MESSAGE);
        } else {
            //  ord_ComboBox_Type.setBackground(Color.white);
            chkType = true;

        }
        if (a.equals("Agent Last Name")) {
            // ord_ComboBox_Agent.setBackground(Color.pink);
            chkAgent = false;
            JOptionPane.showMessageDialog(this, "Please select an Agent name below there", "Invalid Last Name", JOptionPane.ERROR_MESSAGE);
        } else {
            //  ord_ComboBox_Agent.setBackground(Color.white);
            chkAgent = true;
        }

        //get the product id from product table for inserted product type & grade
        String sql1 = "select productID from product where productType='" + t + "' and productGrade='" + g + "'";
        try {
            rs = ps.executeQuery(sql1);
            while (rs.next()) {
                ord_lbl_pid.setText(rs.getString("productID"));

            }

        } catch (Exception e) {
        }

        String pid = ord_lbl_pid.getText();

        //validate order & due dates if they are empty
        java.sql.Date o = null;
        java.sql.Date d = null;

        try {
            ord_DateChooser_OrderDate.setBackground(Color.WHITE);
            o = new java.sql.Date(ord_DateChooser_OrderDate.getDate().getTime());

        } catch (NullPointerException e) {
            // ord_lblErrorOD.setText("Please enter an order date");
            ord_DateChooser_OrderDate.setBackground(Color.pink);
        }

        try {
            ord_DateChooser_DueDate.setBackground(Color.WHITE);
            d = new java.sql.Date(ord_DateChooser_DueDate.getDate().getTime());
        } catch (NullPointerException e) {
            ord_DateChooser_DueDate.setBackground(Color.pink);

            //ord_lblErrorDD.setText("Please enter a due date");
        }
        //check status
        Ord_Procedure op = new Ord_Procedure();
        Ord_insertAssignRaw iar = new Ord_insertAssignRaw();
        if (chkType == true && chkGrade == true) {
            int oid = Integer.parseInt(ord_lblRequestIdValue.getText()) - 1;
            //System.out.println(oid);
            boolean r = op.ordstatus(oid, pid, qu);

            if (r == true) {
                ord_txtStatusValue.setText("complete");
            } else {
                ord_txtStatusValue.setText("Pending for an order");
                JOptionPane.showMessageDialog(this, "Since there have insufficient raw material, order will be delayed.", "Insufficient Ink", JOptionPane.WARNING_MESSAGE);
            }
        }
        if (chkAgent == true) {
            String sql = "Insert into orders (orderDate,dueDate,quantity,pid,checkStatus) values ('" + o + "','" + d + "','" + qu + "','" + pid + "','" + ord_txtStatusValue.getText() + "')";

            try {

                ps = con.prepareStatement(sql);

                ps.execute();

                ordTableLoad();

            } catch (Exception e) {
            }
            iar.ordstatus(Integer.parseInt(ord_lblRequestIdValue.getText()) - 1, pid, qu);
            String aid = null;
            String sql3 = "select agID from agent where agLname='" + a + "' and agFname='" + af + "'";
            try {
                rs = ps.executeQuery(sql3);
                while (rs.next()) {
                    aid = rs.getString("agID");

                }

            } catch (Exception e) {
            }

            int oid = Integer.parseInt(ord_lblRequestIdValue.getText()) - 1;

            String sql2 = "Insert into request (orderID,agentID) values ('" + oid + "','" + aid + "')";
            try {

                ps = con.prepareStatement(sql2);

                ps.execute();

                // ordTableLoad();
            } catch (Exception e) {
            }

        }
        ord_txtStatusValue.setText("");
        ord_ComboBox_AgentLname.setSelectedItem("Agent Last Name");
        ord_ComboBox_Type.setSelectedItem("Type");
        ord_ComboBox_Grade.setSelectedItem("Grade");
        ord_lblRemainingDate.setVisible(false);
        ord_Spinner_Quantity.setValue(1);
        ord_DateChooser_OrderDate.setDate(null);
        ord_DateChooser_DueDate.setDate(null);
        ord_lbl_pid.setText("");
        ord_ComboBox_fname.setSelectedItem("Agent First Name");
    }//GEN-LAST:event_ord_btnInsertActionPerformed

    private void ord_DateChooser_OrderDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ord_DateChooser_OrderDatePropertyChange

        //if user enter order date after the due date this will be executed
        ord_lblErrorOD.setText("");
        ord_lblRemainingDate.setVisible(true);
        Ord_Remaining_Date rdt = new Ord_Remaining_Date();
        ord_daysdifference = rdt.rdates(ord_DateChooser_OrderDate, ord_DateChooser_DueDate);

        //check the validity of date difference
        if (ord_daysdifference >= 0) {
            String days = String.valueOf(ord_daysdifference);

            ord_lblRemainingDate.setText(days);

        } else {
            ord_lblRemainingDate.setText("");
            //    jLabel18.setText("You have entered an invalid Order Date comparing to Due Date. Please enter a new Order Date");
            // jLabel18.setText("");
            //  JOptionPane.showMessageDialog(null, , "Inane Warning", JOptionPane.WARNING_MESSAGE);
            JOptionPane.showMessageDialog(this, "You have entered an invalid Order Date comparing to Due Date. Please enter a new Order Date", "Invalid Order Date", JOptionPane.WARNING_MESSAGE);
            ord_DateChooser_OrderDate.setDate(null);

        }
    }//GEN-LAST:event_ord_DateChooser_OrderDatePropertyChange

    private void ord_DateChooser_DueDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ord_DateChooser_DueDatePropertyChange

        //if user enter due date after the order date this will be executed
        ord_lblErrorDD.setText("");
        ord_lblRemainingDate.setVisible(true);
        Ord_Remaining_Date rd = new Ord_Remaining_Date();
        ord_daysdifference = rd.rdates(ord_DateChooser_OrderDate, ord_DateChooser_DueDate);
        if (ord_daysdifference >= 0) {
            String days = String.valueOf(ord_daysdifference);
            ord_lblRemainingDate.setText(days);
        } else {
            ord_lblRemainingDate.setText("");
            //jLabel17.setText("You have entered an invalid Due date comparing to Order Date. Please enter a new Due Date");
            //JOptionPane.showMessageDialog(null, , "Inane Warning", JOptionPane.WARNING_MESSAGE);
            JOptionPane.showMessageDialog(this, "You have entered an invalid Due date comparing to Order Date. Please enter a new Due Date", "Invalid Due Date", JOptionPane.WARNING_MESSAGE);
            // jLabel17.setText("");
            ord_DateChooser_DueDate.setDate(null);

        }

    }//GEN-LAST:event_ord_DateChooser_DueDatePropertyChange

    private void ord_Spinner_QuantityPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ord_Spinner_QuantityPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_ord_Spinner_QuantityPropertyChange

    private void ord_btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_btnUpdateActionPerformed
        ord_btnInsert.setEnabled(true);
        // ord_btnClear.setEnabled(true);
        boolean chkGrade;
        boolean chkType;
        boolean chkAgent;
        int x = JOptionPane.showConfirmDialog(this, "Are you sure you want to update this selected order?");

        if (x == 0) {

            String i = ord_lblRequestIdValue.getText();
            String qu = ord_Spinner_Quantity.getValue().toString();
            String a = ord_ComboBox_AgentLname.getSelectedItem().toString();
            String af = ord_ComboBox_fname.getSelectedItem().toString();
            java.sql.Date o = new java.sql.Date(ord_DateChooser_OrderDate.getDate().getTime());
            java.sql.Date d = new java.sql.Date(ord_DateChooser_DueDate.getDate().getTime());
            String t = ord_ComboBox_Type.getSelectedItem().toString();
            int g = 0;
            try {
                g = Integer.parseInt(ord_ComboBox_Grade.getSelectedItem().toString());
                chkGrade = true;

            } catch (NumberFormatException e) {
                chkGrade = false;
                JOptionPane.showMessageDialog(this, "Please select a Grade below there", "Invalid Grade", JOptionPane.ERROR_MESSAGE);
            }
            if (t.equals("Type")) {
                chkType = false;
                JOptionPane.showMessageDialog(this, "Please select a Type below there", "Invalid Type", JOptionPane.ERROR_MESSAGE);
            } else {
                chkType = true;

            }
            if (a.equals("Agent Last Name")) {
                chkAgent = false;
                JOptionPane.showMessageDialog(this, "Please select an Agent name below there", "Invalid Last Name", JOptionPane.ERROR_MESSAGE);
            } else {
                chkAgent = true;
            }
            //get the product id from product table for inserted product type & grade
            String sql1 = "select productID from product where productType='" + t + "' and productGrade='" + g + "'";
            try {
                rs = ps.executeQuery(sql1);
                while (rs.next()) {
                    ord_lbl_pid.setText(rs.getString("productID"));

                }

            } catch (Exception e) {
            }

            String pid = ord_lbl_pid.getText();
            Ord_Procedure op = new Ord_Procedure();
            Ord_updateAssRaw op1 = new Ord_updateAssRaw();
            //check status
            if (chkType == true && chkGrade == true) {

                int I = Integer.parseInt(i);
                boolean r = op.ordstatus(I, pid, qu);

                if (r == true) {
                    ord_txtStatusValue.setText("complete");
                } else {
                    ord_txtStatusValue.setText("Pending for an order");
                    JOptionPane.showMessageDialog(this, "Since there have insufficient raw material, order will be delayed.", "Insufficient Ink", JOptionPane.WARNING_MESSAGE);
                }

            }
            if (chkAgent == true) {
                String sql = "update orders o set o.orderDate='" + o + "',o.dueDate='" + d + "',o.quantity='" + qu + "',o.pid='" + pid + "',o.checkStatus='" + ord_txtStatusValue.getText() + "' where orderID ='" + i + "'  ";
                try {
                    ps = con.prepareStatement(sql);
                    ps.execute();
                    ordTableLoad();
                } catch (Exception e) {
                }
                String aid = null;
                //int rid= Integer.parseInt(ord_lblRequestIdValue.getText());
                String sql3 = "select agID from agent where agLname='" + a + "' and agFname='" + af + "'";
                try {
                    rs = ps.executeQuery(sql3);
                    while (rs.next()) {
                        aid = rs.getString("agID");

                    }

                } catch (Exception e) {
                }
                String sql4 = "update request set orderID='" + i + "', agentID='" + aid + "' where orderID ='" + i + "' ";
                try {
                    ps = con.prepareStatement(sql4);
                    ps.execute();
                    // ordTableLoad();
                } catch (Exception e) {
                }
                op1.ordstatus(Integer.parseInt(i), pid, qu);
            }
            //   ord_btnInsert.setEnabled(true);
            ord_txtStatusValue.setText("");
            ord_ComboBox_AgentLname.setSelectedItem("Agent Last Name");
            ord_ComboBox_fname.setSelectedItem("Agent First Name");
            ord_ComboBox_Type.setSelectedItem("Type");
            ord_ComboBox_Grade.setSelectedItem("Grade");
            ord_lblRemainingDate.setVisible(false);
            ord_Spinner_Quantity.setValue(1);
            ord_DateChooser_OrderDate.setDate(null);
            ord_DateChooser_DueDate.setDate(null);
            ord_lblRemainingDate.setVisible(false);
        } else if (x == 1) {
            //   ord_btnInsert.setEnabled(true);
            ord_txtStatusValue.setText("");
            ord_ComboBox_AgentLname.setSelectedItem("Agent Last Name");
            ord_ComboBox_fname.setSelectedItem("Agent First Name");
            ord_ComboBox_Type.setSelectedItem("Type");
            ord_ComboBox_Grade.setSelectedItem("Grade");
            ord_lblRemainingDate.setVisible(false);
            ord_Spinner_Quantity.setValue(1);
            ord_DateChooser_OrderDate.setDate(null);
            ord_DateChooser_DueDate.setDate(null);
            ord_lblRemainingDate.setVisible(false);
        } else {
            //   ord_btnInsert.setEnabled(true);
            ord_txtStatusValue.setText("");
            ord_ComboBox_AgentLname.setSelectedItem("Agent Last Name");
            ord_ComboBox_fname.setSelectedItem("Agent First Name");
            ord_ComboBox_Type.setSelectedItem("Type");
            ord_ComboBox_Grade.setSelectedItem("Grade");
            ord_lblRemainingDate.setVisible(false);
            ord_Spinner_Quantity.setValue(1);
            ord_DateChooser_OrderDate.setDate(null);
            ord_DateChooser_DueDate.setDate(null);
            ord_lblRemainingDate.setVisible(false);
        }
    }//GEN-LAST:event_ord_btnUpdateActionPerformed

    private void ord_tbl_VidulakaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ord_tbl_VidulakaMouseClicked
        ord_btnInsert.setEnabled(false);
//        ord_btnClear.setEnabled(false);
        ord_lblRemainingDate.setVisible(true);

        try {
            int r = ord_tbl_Vidulaka.getSelectedRow();

            String tableclick = ord_tbl_Vidulaka.getModel().getValueAt(r, 0).toString();

            String sql = "select * from orders ode,product p,request rqt,agent a where ode.orderID='" + tableclick + "' and rqt.orderID=ode.orderID and ode.pid=p.productID and a.agID=rqt.agentID";
            ps = con.prepareStatement(sql);

            rs = ps.executeQuery();

            if (rs.next()) {
                String t = rs.getString("productType");
                ord_ComboBox_Type.setSelectedItem(t);
                String i = rs.getString("ode.orderID");
                ord_lblRequestIdValue.setText(i);

                String g = rs.getString("productGrade");
                ord_ComboBox_Grade.setSelectedItem(g);
                String na = rs.getString("a.agLname");
                ord_ComboBox_AgentLname.setSelectedItem(na);
                String fna = rs.getString("a.agFname");

                ord_ComboBox_fname.setSelectedItem(fna);
                Date o = rs.getDate("orderDate");
                ord_DateChooser_OrderDate.setDate(o);
                Date d = rs.getDate("dueDate");
                ord_DateChooser_DueDate.setDate(d);
                String pid = rs.getString("productID");
                ord_lbl_pid.setText(pid);
                String s = rs.getString("checkStatus");
                ord_txtStatusValue.setText(s);
                String qu = rs.getString("quantity");
                ord_Spinner_Quantity.setValue(Integer.parseInt(qu));

            }
        } catch (Exception e) {
        }


    }//GEN-LAST:event_ord_tbl_VidulakaMouseClicked

    private void ord_btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_btnDeleteActionPerformed
        ord_btnInsert.setEnabled(true);
        // ord_btnClear.setEnabled(true);
        int x = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete the selected row?");
        if (x == 0) {
            String i = ord_lblRequestIdValue.getText();
            String sql1 = "delete from request where orderID='" + i + "' ";
            try {
                ps = con.prepareStatement(sql1);
                ps.execute();
                // ordTableLoad();
            } catch (Exception e) {
            }
            String sql2 = "delete from assign_raw_material where orderID='" + i + "' ";
            try {
                ps = con.prepareStatement(sql2);
                ps.execute();
                // ordTableLoad();
            } catch (Exception e) {
            }
            String sql = "delete from orders where orderID='" + i + "' ";
            try {
                ps = con.prepareStatement(sql);
                ps.execute();
                ordTableLoad();
            } catch (Exception e) {
            }
            //   ord_btnInsert.setEnabled(true);
            ord_lblRemainingDate.setVisible(false);
            ord_txtStatusValue.setText("");
            ord_ComboBox_AgentLname.setSelectedItem("Agent Last Name");
            ord_ComboBox_fname.setSelectedItem("Agent First Name");
            ord_ComboBox_Type.setSelectedItem("Type");
            ord_ComboBox_Grade.setSelectedItem("Grade");
            ord_lblRemainingDate.setVisible(false);
            ord_Spinner_Quantity.setValue(1);
            ord_DateChooser_OrderDate.setDate(null);
            ord_DateChooser_DueDate.setDate(null);
        } else if (x == 1) {
            //    ord_btnInsert.setEnabled(true);
            ord_txtStatusValue.setText("");
            ord_ComboBox_AgentLname.setSelectedItem("Agent Last Name");
            ord_ComboBox_fname.setSelectedItem("Agent First Name");
            ord_ComboBox_Type.setSelectedItem("Type");
            ord_ComboBox_Grade.setSelectedItem("Grade");
            ord_lblRemainingDate.setVisible(false);
            ord_Spinner_Quantity.setValue(1);
            ord_DateChooser_OrderDate.setDate(null);
            ord_DateChooser_DueDate.setDate(null);
            ord_lblRemainingDate.setVisible(false);
        } else {
            //  ord_btnInsert.setEnabled(true);
            ord_txtStatusValue.setText("");
            ord_ComboBox_AgentLname.setSelectedItem("Agent Last Name");
            ord_ComboBox_fname.setSelectedItem("Agent First Name");
            ord_ComboBox_Type.setSelectedItem("Type");
            ord_ComboBox_Grade.setSelectedItem("Grade");
            ord_lblRemainingDate.setVisible(false);
            ord_Spinner_Quantity.setValue(1);
            ord_DateChooser_OrderDate.setDate(null);
            ord_DateChooser_DueDate.setDate(null);
            ord_lblRemainingDate.setVisible(false);
        }


    }//GEN-LAST:event_ord_btnDeleteActionPerformed

    private void ord_btnViewCompleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_btnViewCompleActionPerformed
        // TODO add your handling code here:
        // ord_completedPanel.setVisible(true);
        //ord_VidulakaPanel.setVisible(false);

        ord_btnInsert.setEnabled(false);
        ord_tbl_Vidulaka.setVisible(false);
        //  ord_btnClear.setEnabled(true);
        String sql = "select distinct o.orderID 'Order ID',p.productType 'Product Type',p.productGrade 'Product Grade', o.quantity Quantity, o.orderDate 'Order Date', o.dueDate 'Due Date',o.printingStatus 'Printing Status'  from orders o,product p where o.pid=p.productID and o.printingStatus='complete'";
        try {
            ps = con.prepareStatement(sql);

            rs = ps.executeQuery();

            ord_tbl_Vidulaka1.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
        }

    }//GEN-LAST:event_ord_btnViewCompleActionPerformed

    private void ord_btnWholeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_btnWholeActionPerformed
        ord_btnInsert.setEnabled(true);
        ord_tbl_Vidulaka.setVisible(true);
        //  ord_btnClear.setEnabled(true);
        ordTableLoad();
        ord_txtStatusValue.setText("");
        ord_ComboBox_AgentLname.setSelectedItem("Agent Last Name");
        ord_ComboBox_Type.setSelectedItem("Type");
        ord_ComboBox_Grade.setSelectedItem("Grade");
        ord_lblRemainingDate.setVisible(false);
        ord_Spinner_Quantity.setValue(1);
        ord_DateChooser_OrderDate.setDate(null);
        ord_DateChooser_DueDate.setDate(null);
        ord_lblRemainingDate.setVisible(false);
        ord_ComboBox_fname.setSelectedItem("Agent First Name");
    }//GEN-LAST:event_ord_btnWholeActionPerformed

    private void ord_btnViewPendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_btnViewPendActionPerformed

        ord_btnInsert.setEnabled(false);
        ord_tbl_Vidulaka.setVisible(false);

        // ord_btnClear.setEnabled(true);
        String sql = "select distinct o.orderID 'Order ID',p.productType 'Product Type',p.productGrade 'Product Grade', o.quantity Quantity, o.orderDate 'Order Date', o.dueDate 'Due Date',o.checkstatus 'Order Status',o.printingStatus 'Printing Status'  from orders o,product p where o.pid=p.productID and o.checkStatus='Pending for an order'";
        try {
            ps = con.prepareStatement(sql);

            rs = ps.executeQuery();

            ord_tbl_Vidulaka1.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
        }

    }//GEN-LAST:event_ord_btnViewPendActionPerformed

    private void ord_btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_btnSearchActionPerformed
        ord_btnInsert.setEnabled(true);
        String t = ord_txtType.getText();
        if (t.equals("")) {
            JOptionPane.showMessageDialog(this, "Enter a Key Word to Search!");
        } else {
            String sql = "select distinct o.orderID,p.productType 'Product Type',p.productGrade 'Product Grade', o.quantity Quantity, o.orderDate 'Order Date', o.dueDate 'Due Date',o.checkstatus 'Order Status',o.printingStatus 'Printing Status'  from orders o,product p where o.pid=p.productID and p.productType like '%" + t + "%'";
            try {
                ps = con.prepareStatement(sql);

                rs = ps.executeQuery();

                ord_tbl_Vidulaka.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (Exception e) {
            }
        }
        ord_txtType.setText("");
    }//GEN-LAST:event_ord_btnSearchActionPerformed

    private void ord_DateChooser_OrderDateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ord_DateChooser_OrderDateKeyTyped

    }//GEN-LAST:event_ord_DateChooser_OrderDateKeyTyped

    private void ord_btnViewPendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ord_btnViewPendMouseClicked
        /*  ord_btnInsert.setEnabled(false);
         ord_btnUpdate.setEnabled(false);
         ord_btnDelete.setEnabled(false);*/
    }//GEN-LAST:event_ord_btnViewPendMouseClicked

    private void ord_btnViewPendMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ord_btnViewPendMouseReleased
        /* ord_btnInsert.setEnabled(true);
         ord_btnUpdate.setEnabled(true);
         ord_btnDelete.setEnabled(true);*/
    }//GEN-LAST:event_ord_btnViewPendMouseReleased

    private void ord_btnWholeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ord_btnWholeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ord_btnWholeKeyPressed

    private void ord_tbl_VidulakaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ord_tbl_VidulakaMouseReleased
        ord_btnInsert.setEnabled(true);
        // ord_btnClear.setEnabled(true);
        /*  ord_lblStatusValue.setText("");
         ord_ComboBox_Agent.setSelectedItem("Agent Last Name");
         ord_ComboBox_Type.setSelectedItem("Type");
         ord_ComboBox_Grade.setSelectedItem("Grade");
         ord_lblRemainingDate.setVisible(false);
         ord_Spinner_Quantity.setValue(1);
         ord_DateChooser_OrderDate.setDate(null);
         ord_DateChooser_DueDate.setDate(null);*/
    }//GEN-LAST:event_ord_tbl_VidulakaMouseReleased

    private void ord_btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_btnClearActionPerformed
        ord_btnInsert.setEnabled(true);
        ord_txtStatusValue.setText("");
        ord_ComboBox_AgentLname.setSelectedItem("Agent Last Name");
        ord_ComboBox_Type.setSelectedItem("Type");
        ord_ComboBox_Grade.setSelectedItem("Grade");
        ord_lblRemainingDate.setVisible(false);
        ord_Spinner_Quantity.setValue(1);
        ord_DateChooser_OrderDate.setDate(null);
        ord_DateChooser_DueDate.setDate(null);
        ord_lblRemainingDate.setVisible(false);
        ord_ComboBox_fname.setSelectedItem("Agent First Name");
        //set ord_lblRequestIdValue as next order id
        String sql1 = "select max(orderID)+1 orderID from orders";
        try {
            // Statement stm = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            ps = con.prepareStatement(sql1);
            rs = ps.executeQuery();

            while (rs.next()) {

                ord_lblRequestIdValue.setText(rs.getString("orderID"));

            }

        } catch (Exception e) {

        }

        ord_lbl_pid.setText("");
    }//GEN-LAST:event_ord_btnClearActionPerformed

    private void ord_txtTypeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ord_txtTypeKeyTyped
        String t = ord_txtType.getText();

        String sql = "select distinct o.orderID,p.productType 'Product Type',p.productGrade 'Product Grade', o.quantity Quantity, o.orderDate 'Order Date', o.dueDate 'Due Date',o.checkstatus 'Order Status',o.printingStatus 'Printing Status'  from orders o,product p where o.pid=p.productID and p.productType like '%" + t + "%'";
        try {
            ps = con.prepareStatement(sql);

            rs = ps.executeQuery();

            ord_tbl_Vidulaka.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
        }

        // ord_txtType.setText("");
    }//GEN-LAST:event_ord_txtTypeKeyTyped

    private void ord_tbl_Vidulaka1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ord_tbl_Vidulaka1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ord_tbl_Vidulaka1MouseClicked

    private void ord_tbl_Vidulaka1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ord_tbl_Vidulaka1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ord_tbl_Vidulaka1MouseReleased

    private void ord_txtTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_txtTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ord_txtTypeActionPerformed

    private void ord_btnCheckAvailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_btnCheckAvailActionPerformed
        ord_VidulakaPanel.setVisible(false);
        jPanel1.setVisible(false);
        ord_ModelPanel.setVisible(false);
        ord_custPanel.setVisible(false);
        ord_checkAvailPanel.setVisible(true);

    }//GEN-LAST:event_ord_btnCheckAvailActionPerformed

    private void ord_cmbRawMatNamePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ord_cmbRawMatNamePropertyChange
        //  fillItemCode(jComboBox1.getSelectedItem().toString());

    }//GEN-LAST:event_ord_cmbRawMatNamePropertyChange

    private void ord_cmbSupNamePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ord_cmbSupNamePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_ord_cmbSupNamePropertyChange
    public void ordReceivedTableLoad() {
        String sql = "select distinct ra.itemName 'Item Name',rrm.unitPrice 'Unit Price',rrm.totalPrice 'Total Price',rrm.amount,rrm.date,sr.supplierName 'Supplier' from raw_material ra,received_raw_material rrm,supplier_raw_material sr where ra.itemCode=rrm.itemCode and sr.sid=rrm.sid";
        try {

            ps = con.prepareStatement(sql);

            rs = ps.executeQuery();

            ord_tblReceivedRawMat.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
        }
    }
    private void ord_btnAddChkRawMatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_btnAddChkRawMatActionPerformed
        String rmn = ord_cmbRawMatName.getSelectedItem().toString();
        double unp = Double.parseDouble(ord_txtUniPri.getText());
        double ttp = Double.parseDouble(ord_txtTotPri.getText());
        double amt = Double.parseDouble(ord_txtAmt.getText());
        java.sql.Date o = null;

        try {
            o = new java.sql.Date(ord_ReceivedDate.getDate().getTime());
        } catch (Exception e) {
        }
        String sn = ord_cmbSupName.getSelectedItem().toString();
        String phn = ord_txtSupPhn.getText();

        String sql1 = "select * from raw_material where itemName='" + ord_cmbRawMatName.getSelectedItem().toString() + "'";
        try {
            rs = ps.executeQuery(sql1);
            while (rs.next()) {
                ord_lblItemCode.setText(rs.getString("itemCode"));

            }

        } catch (Exception e) {
        }
        String sql2 = "select * from supplier_raw_material where supplierName='" + ord_cmbSupName.getSelectedItem().toString() + "' and phone='" + phn + "'";
        System.out.println(sql2);
        try {
            rs = ps.executeQuery(sql2);
            while (rs.next()) {
                ord_lblsid.setText(rs.getString("sid"));

            }

        } catch (Exception e) {
        }
        System.out.println(ord_lblsid);
        String sql3 = "Insert into received_raw_material (itemCode,unitPrice,totalPrice,amount,date,sid) values ('" + ord_lblItemCode.getText() + "','" + unp + "','" + ttp + "','" + amt + "','" + o + "','" + ord_lblsid.getText() + "')";

        try {

            ps = con.prepareStatement(sql3);

            ps.execute();

            ordReceivedTableLoad();
        } catch (Exception e) {
        }
        

    }//GEN-LAST:event_ord_btnAddChkRawMatActionPerformed

    private void ord_txtTotPriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_txtTotPriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ord_txtTotPriActionPerformed

    private void ord_txtAmtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_txtAmtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ord_txtAmtActionPerformed

    private void ord_btnAddToRawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_btnAddToRawActionPerformed
        float rrmquan[] = new float[10];
        float ramquan[] = new float[10];
        String rrmi[] = new String[10];
        String rmi[] = new String[10];
        ord_lbDownArrow.setVisible(true);
        String sql = "select rrm.amount from received_raw_material rrm,raw_material ra where rrm.itemCode=ra.itemCode";

        try {
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery(sql);
            int i = 0;
            while (rs.next()) {

                rrmquan[i] = rs.getFloat("amount");

                i++;
            }
            /*  for(int i=0;i<;i++){
             for(int j=0;j<;j++){
                    
             }
             }*/

        } catch (Exception e) {
        }

        String sql1 = "select ra.amount from received_raw_material rrm,raw_material ra where rrm.itemCode=ra.itemCode";

        try {
            ps = con.prepareStatement(sql1);
            rs = ps.executeQuery(sql1);
            int i = 0;
            while (rs.next()) {

                ramquan[i] = rs.getFloat("amount");

                i++;
            }
            /*  for(int i=0;i<;i++){
             for(int j=0;j<;j++){
                    
             }
             }*/

        } catch (Exception e) {
        }

        String sql3 = "select rrm.itemCode from received_raw_material rrm,raw_material ra where rrm.itemCode=ra.itemCode";

        try {
            ps = con.prepareStatement(sql3);
            rs = ps.executeQuery(sql3);
            int i = 0;
            while (rs.next()) {

                rrmi[i] = rs.getString("itemCode");

                i++;
            }
            /*  for(int i=0;i<;i++){
             for(int j=0;j<;j++){
                    
             }
             }*/

        } catch (Exception e) {
        }

        String sql2 = "select ra.itemCode from received_raw_material rrm,raw_material ra where rrm.itemCode=ra.itemCode";

        try {
            ps = con.prepareStatement(sql2);
            rs = ps.executeQuery(sql2);
            int i = 0;
            while (rs.next()) {

                rmi[i] = rs.getString("itemCode");

                i++;
            }
            /*  for(int i=0;i<;i++){
             for(int j=0;j<;j++){
                    
             }
             }*/

        } catch (Exception e) {
        }

        int i = 0;
        while (rrmi[i] != null) {
            int j = 0;
            while (rmi[j] != null) {
                //System.out.println(rrmquan.length);
                if (rrmi[i].equals(rmi[j])) {
                    ramquan[j] = rrmquan[i] + ramquan[j];
                    try {
                        String sql11 = "update raw_material set amount='" + ramquan[j] + "' where itemCode ='" + rmi[i] + "' ";

                        ps = con.prepareStatement(sql11);
                        ps.execute();

                    } catch (Exception e) {
                    }
                    break;
                }
                j++;
            }
            i++;
        }

        ordRawMatTableLoad();

        String sql4 = "delete from received_raw_material";
        try {
            ps = con.prepareStatement(sql4);
            ps.execute();
            // ordTableLoad();
            ordReceivedTableLoad();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_ord_btnAddToRawActionPerformed

    private void ord_txtSupPhnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_txtSupPhnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ord_txtSupPhnActionPerformed

    private void ord_btn_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_btn_BackActionPerformed
        // TODO add your handling code here:
        ord_checkAvailPanel.setVisible(false);
        ord_VidulakaPanel.setVisible(true);
        ord_lbDownArrow.setVisible(false);
    }//GEN-LAST:event_ord_btn_BackActionPerformed

    private void ord_btn_SaledAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_btn_SaledAmountActionPerformed
        //get pid
        String sql = "select productID from product where productType='" + ord_lblModelNameValue.getText() + "' and productGrade='" + ord_cmbModelGrade.getSelectedItem() + "'";

        try {
            rs = ps.executeQuery(sql);
            while (rs.next()) {
                ord_lblModPidVal.setText(rs.getString("productID"));

            }

        } catch (Exception e) {
        }

        //get return date values for array
        String array[] = new String[10];
        String sql2 = "select date FROM returns";
        try {
            rs = ps.executeQuery(sql2);
            int i = 0;
            while (rs.next()) {

                array[i] = rs.getString("date");

                i++;
            }

        } catch (Exception e) {
        }

        //get last month to m 
        Calendar lastMonth = Calendar.getInstance();
        int m = lastMonth.get(Calendar.MONTH);
        //String M = Integer.toString(m);

        String newArray[] = new String[10];
        int month[] = new int[10];
        int i = 0;
        while (array[i] != null) {
            // System.out.println(array[i].substring(5, 7));
            //i++;
            //for (int j = 0; j < array[i].length; j++) {
            newArray[i] = array[i].substring(5, 7);
            //   }
            month[i] = Integer.parseInt(newArray[i]);
            i++;
        }
        int j = 0;
        while (month[j] != 0) {
            if (month[j] == m) {
                //get total amount for particular pid
                String sql1 = "select sum(amount) from returns where productID='" + ord_lblModPidVal.getText() + "'";

                try {
                    rs = ps.executeQuery(sql1);
                    while (rs.next()) {
                        ord_lblModRetAmtVal.setText(rs.getString("sum(amount)"));

                    }

                } catch (Exception e) {
                }
            }
            j++;
        }

        //get order date values for array1
        String array1[] = new String[30];
        String sql4 = "select orderDate FROM orders";
        try {
            rs = ps.executeQuery(sql4);
            int k = 0;
            while (rs.next()) {

                array1[k] = rs.getString("orderDate");

                k++;
            }

        } catch (Exception e) {
        }

        /*   int l=0;
         while(array1[l]!=null){
         System.out.println(array1[l]);l++;
         }*/
        String newArray1[] = new String[10];
        int month1[] = new int[10];
        int i1 = 0;
        while (array1[i1] != null) {
            // System.out.println(array[i].substring(5, 7));
            //i++;
            //for (int j = 0; j < array[i].length; j++) {
            newArray1[i1] = array1[i1].substring(5, 7);
            //   }
            month1[i1] = Integer.parseInt(newArray1[i1]);
            i1++;
        }

        int j1 = 0;
        while (month1[j1] != 0) {
            if (month1[j1] == m) {
                //get total amount for particular pid
                String sql3 = "select sum(quantity)from orders where printingStatus='complete' and pid='" + ord_lblModPidVal.getText() + "'";

                try {
                    rs = ps.executeQuery(sql3);
                    while (rs.next()) {
                        ord_lblModAmtValue.setText(rs.getString("sum(quantity)"));

                    }

                } catch (Exception e) {
                }
            }
            j1++;
        }
        int n = Integer.parseInt(ord_lblModAmtValue.getText()) - Integer.parseInt(ord_lblModRetAmtVal.getText());
        String nu = Integer.toString(n);
        ord_lblModSalAmtValue.setText(nu);
        // System.out.println(array[i]);
        /*String[][] b = new String[1][2];
         b[0][0] = "0";
         b[0][1] = "8";*/
        /*  if (b[0][0].equals("0")) {
         if (b[0][1].equals(s)) {
         System.out.println(a);
         }
         }
         else{
         if (b.equals(s)) {
         System.out.println(a);
         }
         }*/

        /*  select 
         from vidulaka.returns
         where productID='V3Ps'*/

    }//GEN-LAST:event_ord_btn_SaledAmountActionPerformed

    private void ord_btn_ChkUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_btn_ChkUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ord_btn_ChkUpdateActionPerformed

    private void ord_btnChkDeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_btnChkDeleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ord_btnChkDeleActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void ord_btnClear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_btnClear1ActionPerformed
        // TODO add your handling code here:
        orderReport orp = new orderReport("E:\\7\\sumudu\\vidulaka\\src\\OrderPlanning\\report1.jasper");

        orp.setVisible(true);
        orp.toFront();
        orp.repaint();
        orp.setAlwaysOnTop(true);

    }//GEN-LAST:event_ord_btnClear1ActionPerformed
    /*  private void fillItemCode(String n) {
     try {
     String sql = "select * from raw_material where itemName='" + n + "'";

     ps = con.prepareStatement(sql);
     rs = ps.executeQuery();
     System.out.println(sql);
     while (rs.next()) {
     String c = rs.getString("itemCode");
     jLabel9.setText(c);
     }
     } catch (Exception e) {
     }

     }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backPanel;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private static javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JComboBox ord_ComboBox_AgentLname;
    private javax.swing.JComboBox ord_ComboBox_Grade;
    private javax.swing.JComboBox ord_ComboBox_Type;
    private javax.swing.JComboBox ord_ComboBox_fname;
    private com.toedter.calendar.JDateChooser ord_DateChooser_DueDate;
    private com.toedter.calendar.JDateChooser ord_DateChooser_OrderDate;
    private javax.swing.JPanel ord_ModelPanel;
    private com.toedter.calendar.JDateChooser ord_ReceivedDate;
    private javax.swing.JPanel ord_ReceivedPanel;
    private javax.swing.JSpinner ord_Spinner_Quantity;
    private javax.swing.JPanel ord_VidulakaPanel;
    private javax.swing.JButton ord_btnAddChkRawMat;
    private javax.swing.JButton ord_btnAddToRaw;
    private javax.swing.JButton ord_btnCheckAvail;
    private javax.swing.JButton ord_btnChkDele;
    private javax.swing.JButton ord_btnClear;
    private javax.swing.JButton ord_btnClear1;
    private javax.swing.JButton ord_btnCust;
    private javax.swing.JButton ord_btnDelete;
    public javax.swing.JButton ord_btnInsert;
    private javax.swing.JButton ord_btnSearch;
    private javax.swing.JButton ord_btnUpdate;
    private javax.swing.JButton ord_btnViewComple;
    private javax.swing.JButton ord_btnViewPend;
    private javax.swing.JButton ord_btnWhole;
    private javax.swing.JButton ord_btn_Back;
    private javax.swing.JButton ord_btn_ChkUpdate;
    private javax.swing.JButton ord_btn_Model;
    private javax.swing.JButton ord_btn_SaledAmount;
    private javax.swing.JButton ord_btn_Vidulaka;
    private javax.swing.JPanel ord_checkAvailPanel;
    private javax.swing.JComboBox ord_cmbModelGrade;
    private javax.swing.JComboBox ord_cmbRawMatName;
    private javax.swing.JComboBox ord_cmbSupName;
    private javax.swing.JPanel ord_custPanel;
    private javax.swing.JLabel ord_lbDownArrow;
    private javax.swing.JLabel ord_lbModHeading;
    private javax.swing.JLabel ord_lblAgent;
    private javax.swing.JLabel ord_lblAmt;
    private javax.swing.JLabel ord_lblDueDate;
    private javax.swing.JLabel ord_lblErrorDD;
    private javax.swing.JLabel ord_lblErrorOD;
    private javax.swing.JLabel ord_lblItemCode;
    private javax.swing.JLabel ord_lblModAmt;
    private javax.swing.JLabel ord_lblModAmtValue;
    private javax.swing.JLabel ord_lblModPidVal;
    private javax.swing.JLabel ord_lblModRetAmtName;
    private javax.swing.JLabel ord_lblModRetAmtVal;
    private javax.swing.JLabel ord_lblModSalAmtName;
    private javax.swing.JLabel ord_lblModSalAmtValue;
    private javax.swing.JLabel ord_lblModelName;
    private javax.swing.JLabel ord_lblModelNameValue;
    private javax.swing.JLabel ord_lblOrderDate;
    private javax.swing.JLabel ord_lblProductName;
    private javax.swing.JLabel ord_lblPty;
    private javax.swing.JLabel ord_lblQuantity;
    private javax.swing.JLabel ord_lblRawName;
    private javax.swing.JLabel ord_lblReceDate;
    private javax.swing.JLabel ord_lblRemainingDate;
    private javax.swing.JLabel ord_lblRemainingDates;
    private javax.swing.JLabel ord_lblRequestId;
    private javax.swing.JLabel ord_lblRequestIdValue;
    private javax.swing.JLabel ord_lblStatus;
    private javax.swing.JLabel ord_lblSupN;
    private javax.swing.JLabel ord_lblSupPhn;
    private javax.swing.JLabel ord_lblTotp;
    private javax.swing.JLabel ord_lblUniPri;
    private javax.swing.JLabel ord_lbl_pid;
    private javax.swing.JLabel ord_lbl_pid_name;
    private javax.swing.JLabel ord_lbl_remaindpng;
    private javax.swing.JLabel ord_lbl_viduLak;
    private javax.swing.JLabel ord_lblsid;
    private javax.swing.JTable ord_tblRawMat;
    private javax.swing.JTable ord_tblReceivedRawMat;
    private javax.swing.JTable ord_tbl_Vidulaka;
    private javax.swing.JTable ord_tbl_Vidulaka1;
    private javax.swing.JTextField ord_txtAmt;
    private javax.swing.JTextField ord_txtStatusValue;
    private javax.swing.JTextField ord_txtSupPhn;
    private javax.swing.JTextField ord_txtTotPri;
    private javax.swing.JTextField ord_txtType;
    private javax.swing.JTextField ord_txtUniPri;
    private javax.swing.JPanel rightPanel;
    // End of variables declaration//GEN-END:variables
}
